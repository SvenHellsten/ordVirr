{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","prevPoints","show","comple","points","quali","parent","startW","Math","floor","random","length","shell","shuffle","split","children","findWords","giveup","i","noCigar","j","a","p","wList","childArr","parentArr","includes","splice","indexOf","push","array","temporaryValue","randomIndex","currentIndex","App","useState","seconds","setSeconds","isActive","setIsActive","React","pressed","setPressed","refresh","setrefresh","sort","b","useEffect","interval","setInterval","clearInterval","fungiveup","handleKeyDown","event","key","keyCode","temp","suc","forEach","element","filter","k","preventDefault","pop","console","log","join","handleKeyUp","document","addEventListener","removeEventListener","className","isCounting","start","end","duration","autoResetKey","map","value","toUpperCase","style","color","replace","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0bc059f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, } from \"react\";\nimport { CountUp } from 'use-count-up'\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport startW from \"./data/ttStartWords.json\";\nimport wList from \"./data/ttWords.json\";\nconst timeLimit = 300;                        //timeLimit in seconds\nconst timeBool = false; \nvar show = [];\nvar comple = [];\nvar points = 0;\nvar prevPoints\nvar quali = false;\nvar parent = startW[Math.floor(Math.random() * startW.length)];\nvar shell = shuffle(parent.split(\"\"));\nvar children = findWords(parent);\nvar giveup = false;\n\n\nfunction clear(){\n\n}\nfunction App() {\n  const [seconds, setSeconds] = useState(timeLimit);\n  const [isActive, setIsActive] = useState(timeBool);\n  const [pressed, setPressed] = React.useState([])\n  // const [shelf, setshelf] = useState(shuffle(parent.split(\"\")));\n  const [refresh,setrefresh] = useState(true);\n  children.sort(function(a, b){\n    return a.length - b.length;\n  });\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    if (seconds === 0){\n      setIsActive(false);\n      fungiveup();\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  React.useEffect(() => {\n\t \tconst handleKeyDown = event => {\n\t    const { key, keyCode } = event;\n        if (key === \"å\" || key  === \"ä\" ||key === \"ö\" ||(keyCode >= 65 && keyCode <= 90)) {\n          let temp = [...shell];\n          var suc = false;\n          temp.forEach(element => {\n            if(element === key && suc === false){\n              show.push(key);\n              temp[temp.indexOf(key)]= \" \"; \n              shell = temp;\n              suc = true;\n            }\n          });\n          setPressed(pressed.filter(k => k !== key))\n        }\n        if (keyCode === 8 && show){\n          event.preventDefault();\n          shell[shell.indexOf(\" \")] = show.pop();\n          setPressed(pressed.filter(k => k !== key))\n        }\n        if (keyCode === 16 || keyCode === 9 || keyCode === 32){\n          event.preventDefault();\n          shell= shuffle(shell);\n          setPressed(pressed.filter(k => k !== key))\n        }\n        if (keyCode === 13 && show){\n          event.preventDefault();\n          console.log(children);\n          console.log(show.join(\"\"));\n          \n          if (!giveup && children.includes(show.join(\"\")) && !comple.includes(show.join(\"\"))){\n            comple.push(show.join(\"\"));\n\n\n            console.log(\"success!\")\n            let i = show.length;\n            if (isActive){\n              setSeconds(seconds => seconds + 5);\n            }\n            if (i == 3){\n              prevPoints= points;\n              points=points + 50;\n            }\n            if (i == 4){\n              prevPoints= points;\n              points=points + 150;\n            }\n            if (i == 5){\n              prevPoints= points;\n              points=points + 300;\n            }\n            if (i == 6){\n              prevPoints= points;\n              points=points + 1000;\n              quali= true;\n            }\n          }\n          let j = 0;\n          let i = show.length;\n\n          for (j = 0; j < i; j++) {\n            shell[shell.indexOf(\" \")] = show.pop();\n          }\n          setPressed(pressed.filter(k => k !== key))\n        }\n  \t};\n\n\t  const handleKeyUp = event => {\n  \t  const { key } = event\n      setPressed(pressed.filter(k => k !== key))\n  \t};\n  \n    document.addEventListener('keydown', handleKeyDown)\n    document.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n      document.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [])\n\n\n  function Refresh(){\n    setrefresh(!(refresh));\n  }\n  \n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      {/* <h2>{timeBool && seconds}</h2> */}\n      <h4><CountUp isCounting start= {prevPoints} end={points} duration={3.2} autoResetKey={points} /></h4>\n        <div className=\"row2\">\n          {children.map((value) => {\n            if (comple.includes(value)){\n              return <h3>{value.toUpperCase()}</h3>;\n            }\n            else{\n              // return <h3 style={{color: \"red\"}}>---</h3>;\n              if (giveup){\n                return <h3 style={{color: \"red\"}}>{value.toUpperCase()}</h3>;\n              }\n              else{\n                return <h3>{value.replace(/[a-ö0-9]/g, \"-\")}</h3>;\n              }\n              \n            }\n            \n          })}\n        </div>\n        <div className=\"row\">\n          {show.map((value) => {\n            return <h2>{value.toUpperCase()}</h2>;\n          })}\n        </div>\n        <div className=\"row3\">\n          <h2>{shell[0].toUpperCase()} </h2>\n          <h2>{shell[1].toUpperCase()} </h2>\n          <h2>{shell[2].toUpperCase()} </h2>\n          <h2>{shell[3].toUpperCase()} </h2>\n          <h2>{shell[4].toUpperCase()} </h2>\n          <h2>{shell[5].toUpperCase()} </h2>\n        </div>\n        <div>\n        <button onClick= {newRound}>\n        {quali ? \"Nästa ord!\":\"Ny runda\"}\n        </button>\n        <button onClick= {fungiveup}>\n          Visa Svaret\n        </button>\n        </div>\n      </header>\n    </div>\n  );\n\n  function fungiveup() {\n    giveup = true;\n    setrefresh(!refresh);\n  }\n  function newRound() {\n    if (!quali){\n      points = 0;\n    }\n    show = [];\n    comple = [];\n    parent = startW[Math.floor(Math.random() * startW.length)];\n    shell = shuffle(parent.split(\"\"));\n    children = findWords(parent);\n    giveup = false;\n    quali = false;\n    \n    children.sort(function(a, b){\n      return a.length - b.length;\n    });\n    setrefresh(!refresh);\n    }\n    \n}\nfunction findWords(parent) {\n  var a = [];\n  var p = parent + \"\";\n  var i;\n  var noCigar;\n  var j;\n  for (i = 0; i < wList.length; i++) {\n    noCigar = true;\n    var childArr = wList[i].split(\"\");\n    var parentArr = p.split(\"\");\n    for (j = 0; j < childArr.length; j++) {\n      if (parentArr.includes(childArr[j])) {\n        parentArr.splice(parentArr.indexOf(childArr[j]), 1);\n      } else {\n        noCigar = false;\n      }\n    }\n    if (noCigar) {\n      a.push(wList[i]);\n    }\n  }\n  return a;\n\n  \n}\n\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n    for(var i=0; i < show.length; i++){\n      array.splice(array.indexOf(\" \"),1);\n      array.push(\" \");\n    }\n\n  return array;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}